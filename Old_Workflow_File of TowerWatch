name: Tower-Watch CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  sanity-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Frontend Analysis
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.9.0'

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run ESLint
        run: npx eslint . || true
        working-directory: ./frontend

      - name: Run prettier
        run: npx prettier --check . || true
        working-directory: ./frontend

      - name: Run npm audit
        run: npm audit --audit-level=moderate . || true
        working-directory: ./frontend

      - name: Install Retire.js
        run: npm install -g retire
        working-directory: ./frontend

      - name: Run Retire.js
        run: retire . || true
        working-directory: ./frontend

      - name: Run frontend tests
        run: npm test -- --coverage --watchAll=false || true
        working-directory: ./frontend

      # Backend Analysis
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r dev-requirements.txt

      - name: Run pylint
        run: pylint . --ignore=sample_data_pub,unit_test || true

      - name: Run Bandit Security Scan
        run: bandit -r . --exclude=sample_data_pub,unit_test || true

      - name: Run backend tests
        run: |
          pytest --cov=heimdall --cov=mqtt --cov=jarvis --cov=mysql_ingestor --cov=influx_dbingestor --cov=patrol --cov-report=term-missing || true

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: sanity-check
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Docker Image Build
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push images
        run: |
          docker-compose -f ./docker-compose.yaml build
          docker-compose -f ./docker-compose.yaml push


      # Kubernetes Deployment
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Authenticate to Kubernetes cluster
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          cat $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl rollout status deployment/TowerWatch
